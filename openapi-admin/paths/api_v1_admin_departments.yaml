post:
  tags:
    - 部门管理
  summary: 创建部门
  description: 创建新的部门，可以指定上级部门来构建树形结构
  operationId: createDepartment
  security:
    - BearerAuth: []
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: '../components/schemas/CreateDepartmentInput.yaml'
        examples:
          create_root_department:
            summary: 创建根级部门
            value:
              name: "技术中心"
              code: "TECH"
              manager: "张三"
              manager_id: "01ARZ3NDEKTSV4RRFFQ69G5FAV"
              phone: "13800138000"
              description: "负责技术研发工作"
              sort_order: 0
              status: "active"
          create_sub_department:
            summary: 创建子部门
            value:
              parent_id: "01ARZ3NDEKTSV4RRFFQ69G5FAV"
              name: "前端开发组"
              code: "FRONTEND"
              manager: "李四"
              phone: "13800138001"
              sort_order: 1
  responses:
    '200':
      description: 部门创建成功
      content:
        application/json:
          schema:
            $ref: '../components/schemas/DepartmentApiResponse.yaml'
          examples:
            success:
              summary: 创建成功
              value:
                code: 0
                message: "部门创建成功"
                data:
                  id: "01ARZ3NDEKTSV4RRFFQ69G5FAV"
                  parent_id: null
                  name: "技术中心"
                  code: "TECH"
                  manager: "张三"
                  manager_id: "01ARZ3NDEKTSV4RRFFQ69G5FAV"
                  phone: "13800138000"
                  description: "负责技术研发工作"
                  sort_order: 0
                  status: "active"
                  level: 0
                  path: "/TECH"
                  created_at: "2024-01-01 10:00:00"
                  updated_at: "2024-01-01 10:00:00"
                  user_count: 0
                timestamp: 1704067200000
                request_id: "req_12345"

get:
  tags:
    - 部门管理
  summary: 获取部门列表
  description: 分页获取部门列表，支持多种筛选条件和搜索
  operationId: listDepartments
  security:
    - BearerAuth: []
  parameters:
    - name: page
      in: query
      description: 页码
      schema:
        type: integer
        minimum: 1
        default: 1
    - name: page_size
      in: query
      description: 每页数量
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20
    - name: parent_id
      in: query
      description: 上级部门ID，空字符串表示获取根级部门
      schema:
        type: string
        maxLength: 26
      example: "01ARZ3NDEKTSV4RRFFQ69G5FAV"
    - name: status
      in: query
      description: 部门状态筛选
      schema:
        type: string
        enum: [active, inactive]
      example: "active"
    - name: level
      in: query
      description: 层级筛选
      schema:
        type: integer
        minimum: 0
      example: 0
    - name: manager_id
      in: query
      description: 负责人ID筛选
      schema:
        type: string
        maxLength: 26
      example: "01ARZ3NDEKTSV4RRFFQ69G5FAV"
    - name: keyword
      in: query
      description: 搜索关键词（部门名称、编码、负责人）
      schema:
        type: string
      example: "技术"
  responses:
    '200':
      description: 获取部门列表成功
      content:
        application/json:
          schema:
            $ref: '../components/schemas/DepartmentListApiResponse.yaml'
          examples:
            success:
              summary: 获取成功
              value:
                code: 0
                message: "获取部门列表成功"
                data:
                  departments:
                    - id: "01ARZ3NDEKTSV4RRFFQ69G5FAV"
                      parent_id: null
                      name: "技术中心"
                      code: "TECH"
                      manager: "张三"
                      manager_id: "01ARZ3NDEKTSV4RRFFQ69G5FAV"
                      phone: "13800138000"
                      description: "负责技术研发工作"
                      sort_order: 0
                      status: "active"
                      level: 0
                      path: "/TECH"
                      created_at: "2024-01-01 10:00:00"
                      updated_at: "2024-01-01 10:00:00"
                      user_count: 15
                  total: 5
                  page: 1
                  page_size: 20
                timestamp: 1704067200000
                request_id: "req_12345"
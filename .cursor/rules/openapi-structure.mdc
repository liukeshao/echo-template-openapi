---
description:
globs:
alwaysApply: false
---
# OpenAPI 文件结构说明

本项目采用模块化的 OpenAPI 规范组织方式，便于维护和协作。

## 📁 核心文件结构

### 主规范文件
- **[openapi.yaml](mdc:openapi/openapi.yaml)** - 主要的 OpenAPI 3.1.0 规范文件
  - 定义 API 基本信息、服务器、认证方式
  - 通过 `$ref` 引用其他模块化文件

### 路径定义 (`openapi/paths/`)
每个 API 端点对应一个 YAML 文件，命名规则：将 URL 中的 `/` 替换为 `_`

示例：
- `/api/v1/auth/login` → `api_v1_auth_login.yaml`
- `/api/v1/users/me` → `api_v1_users_me.yaml`

### 组件定义 (`openapi/components/`)

#### 数据模型 (`schemas/`)
- **认证相关**:
  - [RegisterInput.yaml](mdc:openapi/components/schemas/RegisterInput.yaml) - 注册请求
  - [LoginInput.yaml](mdc:openapi/components/schemas/LoginInput.yaml) - 登录请求
  - [AuthOutput.yaml](mdc:openapi/components/schemas/AuthOutput.yaml) - 认证响应数据
  
- **用户相关**:
  - [UserInfo.yaml](mdc:openapi/components/schemas/UserInfo.yaml) - 用户信息
  - [UpdateUserInput.yaml](mdc:openapi/components/schemas/UpdateUserInput.yaml) - 更新用户请求
  
- **通用响应**:
  - [Response.yaml](mdc:openapi/components/schemas/Response.yaml) - 标准响应格式
  - [SuccessResponse.yaml](mdc:openapi/components/schemas/SuccessResponse.yaml) - 成功响应

#### 响应模板 (`responses/`)
- [Problem.yaml](mdc:openapi/components/responses/Problem.yaml) - 错误响应模板

#### HTTP 头部 (`headers/`)
- [ExpiresAfter.yaml](mdc:openapi/components/headers/ExpiresAfter.yaml) - 过期时间头部

## 🔗 引用规则

### 在主文件中引用路径
```yaml
paths:
  /api/v1/auth/login:
    $ref: paths/api_v1_auth_login.yaml
```

### 在路径文件中引用组件
```yaml
requestBody:
  content:
    application/json:
      schema:
        $ref: ../components/schemas/LoginInput.yaml
```

### 在组件中引用其他组件
```yaml
properties:
  data:
    $ref: ./UserInfo.yaml
```

## 📝 命名约定
- 文件名使用 PascalCase（如 `UserInfo.yaml`）
- 路径文件名使用下划线分隔（如 `api_v1_auth_login.yaml`）
- Schema 名称与文件名保持一致
- 使用有意义的描述性名称
